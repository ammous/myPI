#!/usr/bin/python# Import required librariesimport RPi.GPIO as GPIOimport sysimport timefrom urllib2 import urlopenfrom json import loads# Tell GPIO library to use GPIO referencesGPIO.setmode(GPIO.BCM)GPIO.setwarnings(False)ledV1=9ledV2=11ledJ1=22ledJ2=10ledR1=4ledR2=17LedSeq = [4,17,22,10,9,11]loop = True# Set Switch GPIO as inputGPIO.setup(7 , GPIO.IN)def powerOn(led):     GPIO.output(led, True)     returndef powerOff(led):     GPIO.output(led, False)     returnfor x in range(len(LedSeq)):    GPIO.setup(LedSeq[x], GPIO.OUT)    powerOff(LedSeq[x])url = "breizhlib.ci.cloudbees.com"jobName = "breizhlib-android"jobName2 = "breizhlib-cloudbees" # 5 minrefresh = 60*5def getJson(url):     req = urlopen('http://'+url+'/api/json')     res = req.read()     data = loads(res)     return datadef printJob(data):    print '----------------'    for job in data['jobs']:         print job['name']+' '+job['color']    print '----------------'    returndef displayJob(data,jobName):    for job in data['jobs']:      if (job['name'] == jobName):           #print job['name']+' '+job['color']           if(job['color'] == 'blue'):              powerOff(ledJ1)              powerOff(ledR1)              powerOn(ledV1)           if(job['color'] == 'red'):              powerOff(ledJ1)              powerOff(ledV1)              powerOn(ledR1)           if(job['color'] == 'yellow'):              powerOff(ledR1)              powerOff(ledV1)              powerOn(ledJ1)    returndef displayJob2(data,jobName):    for job in data['jobs']:      if (job['name'] == jobName):           #print job['name']+' '+job['color']           if(job['color'] == 'blue'):              powerOff(ledJ2)              powerOff(ledR2)              powerOn(ledV2)           if(job['color'] == 'red'):              powerOff(ledJ2)              powerOff(ledV2)              powerOn(ledR2)           if(job['color'] == 'yellow'):              powerOff(ledR2)              powerOff(ledV2)              powerOn(ledJ2)    return# sur appuie long, on quitte le scriptdef my_callback(channel=7):    global loop    if GPIO.input(channel)==0:        refreshJob(channel)    else:        time.sleep(3)    if GPIO.input(channel)==1:        loop = False        GPIO.cleanup()        sys.exit()    returndef allOff():     for x in range(len(LedSeq)):         powerOff(LedSeq[x])     returndef allOn():     for x in range(len(LedSeq)):         powerOn(LedSeq[x])     return def refreshJob(channel=7):    global url,jobName,jobName2    chenillard(1)    allOn()    data = getJson(url)    allOff()    displayJob2(data,jobName)    displayJob(data,jobName2)    returndef chenillard(nb=3):     for x in range(nb):        powerOn(ledV2)        time.sleep(0.1)        powerOff(ledV2)        powerOn(ledV1)        time.sleep(0.1)        powerOff(ledV1)        powerOn(ledJ2)        time.sleep(0.1)        powerOff(ledJ2)        powerOn(ledJ1)        time.sleep(0.1)        powerOff(ledJ1)        powerOn(ledR2)        time.sleep(0.1)        powerOff(ledR2)        powerOn(ledR1)        time.sleep(0.1)        powerOff(ledR1)     returntry:    GPIO.add_event_detect(7, GPIO.RISING)  GPIO.add_event_callback(7, my_callback)  #GPIO.add_event_callback(7, refreshJob)  # Loop until users quits with CTRL-C  while loop :    refreshJob()    time.sleep(refresh)except KeyboardInterrupt:  # Reset GPIO settings  GPIO.cleanup()